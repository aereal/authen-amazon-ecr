---

name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: reviewdog/action-golangci-lint@v2.1.5
        with:
          level: warning
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: actions/setup-go@v3.1.0
        with:
          go-version: '1.18.x'
      - uses: actions/cache@v3.0.4
        with:
          path: ~/go/pkg/mod
          key: go-1.18.x-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-${{ matrix.go_version }}-
      - name: test
        run: go test -v -race -coverprofile=cover.txt ./...
      - name: upload coverage
        uses: codecov/codecov-action@v3.1.0
        with:
          files: ./cover.txt
  determine_release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      will_release: ${{ steps.determine_release.outputs.new_release_published }}
    steps:
      - uses: actions/checkout@v3.0.2
      - id: determine_release
        uses: cycjimmy/semantic-release-action@v3.0.0
        with:
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - determine_release
    if: ${{ needs.determine_release.outputs.will_release }}
    environment: stable
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - uses: cycjimmy/semantic-release-action@v3.0.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - uses: actions/setup-go@v3.1.0
        with:
          go-version: '1.18.x'
      - uses: actions/cache@v3.0.4
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-
            go-${{ hashFiles('**/go.sum') }}
      - uses: goreleaser/goreleaser-action@v3.0.0
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ github.token }}
  test-action:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          role-to-assume: ${{ secrets.ROLE_ARN }}
          aws-region: ap-northeast-1
          role-duration-seconds: 900
      - uses: actions/checkout@v3.0.1
      - id: run
        uses: ./action
      - run: |
          if [[ "$_server" = "" ]]; then
            exit 2
          fi
        env:
          _server: ${{ steps.run.outputs.server }}
